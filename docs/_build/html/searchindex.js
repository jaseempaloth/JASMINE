Search.setIndex({"alltitles": {"AMD GPU (ROCm)": [[38, "amd-gpu-rocm"]], "API Reference": [[31, "api-reference"]], "API Reference:": [[37, null]], "Advanced Examples": [[36, "advanced-examples"]], "Apple Silicon (Metal)": [[38, "apple-silicon-metal"]], "Basic Data Splitting": [[35, "basic-data-splitting"]], "Basic Examples": [[36, "basic-examples"]], "Basic Feature Scaling": [[33, "basic-feature-scaling"]], "Basic Installation Check": [[38, "basic-installation-check"]], "Basic Linear Regression": [[34, "basic-linear-regression"]], "Binary Classification": [[0, "binary-classification"]], "Classes": [[0, "classes"], [33, "classes"], [34, "classes"]], "Classification Data": [[1, "classification-data"]], "Classification Functions": [[32, "classification-functions"]], "Classification Metrics": [[32, "classification-metrics"], [32, "id2"]], "Classification Models": [[0, "classification-models"]], "Classification with Regularization": [[0, "classification-with-regularization"]], "Common Issues": [[38, "common-issues"]], "Complete Pipeline": [[39, "complete-pipeline"]], "Contributing": [[37, "contributing"]], "Core Dependencies": [[38, "core-dependencies"]], "Core Modules": [[31, "core-modules"]], "Custom Split Ratios": [[35, "custom-split-ratios"]], "Data Preprocessing": [[33, "data-preprocessing"], [39, "data-preprocessing"]], "Data Selection": [[35, "data-selection"]], "Dataset Generators": [[1, "dataset-generators"]], "Development Installation": [[38, "development-installation"]], "Docker Installation": [[38, "docker-installation"]], "Example 1: Linear Regression with Cross-Validation": [[36, "example-1-linear-regression-with-cross-validation"]], "Example 2: Multi-class Classification": [[36, "example-2-multi-class-classification"]], "Example 3: Regularization Comparison": [[36, "example-3-regularization-comparison"]], "Example 4: Learning Curve Analysis": [[36, "example-4-learning-curve-analysis"]], "Example 5: GPU vs CPU Benchmark": [[36, "example-5-gpu-vs-cpu-benchmark"]], "Example 6: Large-Scale Pipeline": [[36, "example-6-large-scale-pipeline"]], "Examples": [[0, "examples"], [1, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"]], "Examples & Tutorials": [[36, "examples-tutorials"]], "Feature Scaling": [[39, "feature-scaling"]], "Function Properties": [[35, "function-properties"]], "Functions": [[1, "functions"], [35, "functions"]], "GPU Acceleration": [[39, "gpu-acceleration"]], "GPU Support": [[38, "gpu-support"]], "GPU/TPU Verification": [[38, "gpu-tpu-verification"]], "Getting Started:": [[37, null]], "Google TPU": [[38, "google-tpu"]], "Hyperparameter Tuning": [[36, "hyperparameter-tuning"]], "Indices and Tables": [[37, "indices-and-tables"]], "Installation": [[37, "installation"], [39, "installation"]], "Installation Guide": [[38, "installation-guide"]], "Installation Methods": [[38, "installation-methods"]], "Inverse Transformation": [[33, "inverse-transformation"]], "JIT Compilation": [[39, "jit-compilation"]], "Key Concepts": [[39, "key-concepts"]], "Key Features": [[37, "key-features"]], "License": [[37, "license"]], "Linear Regression": [[39, "linear-regression"]], "Linear Regression with Regularization": [[34, "linear-regression-with-regularization"]], "LinearRegression": [[34, "linearregression"]], "Logistic Regression": [[39, "logistic-regression"]], "LogisticRegression": [[0, "logisticregression"]], "Memory Management": [[36, "memory-management"]], "Method 1: From Source (Recommended)": [[38, "method-1-from-source-recommended"]], "Method 2: Direct Install": [[38, "method-2-direct-install"]], "Method 3: Requirements File": [[38, "method-3-requirements-file"]], "Metric Properties": [[32, "metric-properties"]], "Most Common Classes": [[31, "most-common-classes"]], "Most Common Functions": [[31, "most-common-functions"]], "NVIDIA GPU (CUDA)": [[38, "nvidia-gpu-cuda"]], "Next Steps": [[38, "next-steps"], [39, "next-steps"]], "No Shuffling": [[35, "no-shuffling"]], "Package Overview": [[31, "package-overview"]], "Performance": [[37, "performance"]], "Performance Examples": [[36, "performance-examples"]], "Performance Metrics": [[32, "performance-metrics"]], "Performance Notes": [[33, "performance-notes"]], "Performance Tips": [[0, "performance-tips"], [34, "performance-tips"]], "Platform-Specific Notes": [[38, "platform-specific-notes"]], "Polynomial Data": [[1, "polynomial-data"]], "Preprocessing Pipeline": [[33, "preprocessing-pipeline"]], "Quick Reference": [[31, "quick-reference"]], "Quick Start": [[37, "quick-start"]], "Quick Start Guide": [[39, "quick-start-guide"]], "Regression Data": [[1, "regression-data"]], "Regression Functions": [[32, "regression-functions"]], "Regression Metrics": [[32, "regression-metrics"], [32, "id1"]], "Regression Models": [[34, "regression-models"]], "Reproducible Splits": [[35, "reproducible-splits"]], "Requirements": [[37, "requirements"]], "StandardScaler": [[33, "standardscaler"]], "Support": [[37, "support"]], "System Requirements": [[38, "system-requirements"]], "Table of Contents": [[37, "table-of-contents"]], "Three-Way Split": [[35, "three-way-split"]], "Tips and Best Practices": [[36, "tips-and-best-practices"]], "Troubleshooting": [[38, "troubleshooting"]], "Uninstalling": [[38, "uninstalling"]], "Updating JASMINE": [[38, "updating-jasmine"]], "Usage Tips": [[1, "usage-tips"]], "User Guide": [[37, null]], "Using with Models": [[32, "using-with-models"]], "Verification": [[38, "verification"]], "Virtual Environments": [[38, "virtual-environments"]], "Welcome to JASMINE\u2019s Documentation!": [[37, "welcome-to-jasmine-s-documentation"]], "Your First Model": [[39, "your-first-model"]], "accuracy_score": [[32, "accuracy-score"]], "binary_cross_entropy": [[32, "binary-cross-entropy"]], "categorical_cross_entropy": [[32, "categorical-cross-entropy"]], "generate_classification": [[1, "generate-classification"]], "generate_polynomial": [[1, "generate-polynomial"]], "generate_regression": [[1, "generate-regression"]], "jasmine.classification.LogisticRegression": [[2, "jasmine-classification-logisticregression"]], "jasmine.classification.LogisticRegression.__init__": [[3, "jasmine-classification-logisticregression-init"]], "jasmine.classification.LogisticRegression.evaluate": [[4, "jasmine-classification-logisticregression-evaluate"]], "jasmine.classification.LogisticRegression.inference": [[5, "jasmine-classification-logisticregression-inference"]], "jasmine.classification.LogisticRegression.predict_probabilities": [[6, "jasmine-classification-logisticregression-predict-probabilities"]], "jasmine.classification.LogisticRegression.train": [[7, "jasmine-classification-logisticregression-train"]], "jasmine.datasets.generate_classification": [[8, "jasmine-datasets-generate-classification"]], "jasmine.datasets.generate_polynomial": [[9, "jasmine-datasets-generate-polynomial"]], "jasmine.datasets.generate_regression": [[10, "jasmine-datasets-generate-regression"]], "jasmine.metrics.accuracy_score": [[11, "jasmine-metrics-accuracy-score"]], "jasmine.metrics.binary_cross_entropy": [[12, "jasmine-metrics-binary-cross-entropy"]], "jasmine.metrics.categorical_cross_entropy": [[13, "jasmine-metrics-categorical-cross-entropy"]], "jasmine.metrics.mean_absolute_error": [[14, "jasmine-metrics-mean-absolute-error"]], "jasmine.metrics.mean_squared_error": [[15, "jasmine-metrics-mean-squared-error"]], "jasmine.metrics.r2_score": [[16, "jasmine-metrics-r2-score"]], "jasmine.metrics.root_mean_squared_error": [[17, "jasmine-metrics-root-mean-squared-error"]], "jasmine.preprocessing.StandardScaler": [[18, "jasmine-preprocessing-standardscaler"]], "jasmine.preprocessing.StandardScaler.__init__": [[19, "jasmine-preprocessing-standardscaler-init"]], "jasmine.preprocessing.StandardScaler.fit": [[20, "jasmine-preprocessing-standardscaler-fit"]], "jasmine.preprocessing.StandardScaler.fit_transform": [[21, "jasmine-preprocessing-standardscaler-fit-transform"]], "jasmine.preprocessing.StandardScaler.inverse_transform": [[22, "jasmine-preprocessing-standardscaler-inverse-transform"]], "jasmine.preprocessing.StandardScaler.is_fitted": [[23, "jasmine-preprocessing-standardscaler-is-fitted"]], "jasmine.preprocessing.StandardScaler.transform": [[24, "jasmine-preprocessing-standardscaler-transform"]], "jasmine.regression.LinearRegression": [[25, "jasmine-regression-linearregression"]], "jasmine.regression.LinearRegression.__init__": [[26, "jasmine-regression-linearregression-init"]], "jasmine.regression.LinearRegression.evaluate": [[27, "jasmine-regression-linearregression-evaluate"]], "jasmine.regression.LinearRegression.inference": [[28, "jasmine-regression-linearregression-inference"]], "jasmine.regression.LinearRegression.train": [[29, "jasmine-regression-linearregression-train"]], "jasmine.selection.train_test_split": [[30, "jasmine-selection-train-test-split"]], "mean_absolute_error": [[32, "mean-absolute-error"]], "mean_squared_error": [[32, "mean-squared-error"]], "r2_score": [[32, "r2-score"]], "root_mean_squared_error": [[32, "root-mean-squared-error"]], "train_test_split": [[35, "train-test-split"]]}, "docnames": ["api/classification", "api/datasets", "api/generated/jasmine.classification.LogisticRegression", "api/generated/jasmine.classification.LogisticRegression.__init__", "api/generated/jasmine.classification.LogisticRegression.evaluate", "api/generated/jasmine.classification.LogisticRegression.inference", "api/generated/jasmine.classification.LogisticRegression.predict_probabilities", "api/generated/jasmine.classification.LogisticRegression.train", "api/generated/jasmine.datasets.generate_classification", "api/generated/jasmine.datasets.generate_polynomial", "api/generated/jasmine.datasets.generate_regression", "api/generated/jasmine.metrics.accuracy_score", "api/generated/jasmine.metrics.binary_cross_entropy", "api/generated/jasmine.metrics.categorical_cross_entropy", "api/generated/jasmine.metrics.mean_absolute_error", "api/generated/jasmine.metrics.mean_squared_error", "api/generated/jasmine.metrics.r2_score", "api/generated/jasmine.metrics.root_mean_squared_error", "api/generated/jasmine.preprocessing.StandardScaler", "api/generated/jasmine.preprocessing.StandardScaler.__init__", "api/generated/jasmine.preprocessing.StandardScaler.fit", "api/generated/jasmine.preprocessing.StandardScaler.fit_transform", "api/generated/jasmine.preprocessing.StandardScaler.inverse_transform", "api/generated/jasmine.preprocessing.StandardScaler.is_fitted", "api/generated/jasmine.preprocessing.StandardScaler.transform", "api/generated/jasmine.regression.LinearRegression", "api/generated/jasmine.regression.LinearRegression.__init__", "api/generated/jasmine.regression.LinearRegression.evaluate", "api/generated/jasmine.regression.LinearRegression.inference", "api/generated/jasmine.regression.LinearRegression.train", "api/generated/jasmine.selection.train_test_split", "api/index", "api/metrics", "api/preprocessing", "api/regression", "api/selection", "examples", "index", "installation", "quickstart"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/classification.rst", "api/datasets.rst", "api/generated/jasmine.classification.LogisticRegression.rst", "api/generated/jasmine.classification.LogisticRegression.__init__.rst", "api/generated/jasmine.classification.LogisticRegression.evaluate.rst", "api/generated/jasmine.classification.LogisticRegression.inference.rst", "api/generated/jasmine.classification.LogisticRegression.predict_probabilities.rst", "api/generated/jasmine.classification.LogisticRegression.train.rst", "api/generated/jasmine.datasets.generate_classification.rst", "api/generated/jasmine.datasets.generate_polynomial.rst", "api/generated/jasmine.datasets.generate_regression.rst", "api/generated/jasmine.metrics.accuracy_score.rst", "api/generated/jasmine.metrics.binary_cross_entropy.rst", "api/generated/jasmine.metrics.categorical_cross_entropy.rst", "api/generated/jasmine.metrics.mean_absolute_error.rst", "api/generated/jasmine.metrics.mean_squared_error.rst", "api/generated/jasmine.metrics.r2_score.rst", "api/generated/jasmine.metrics.root_mean_squared_error.rst", "api/generated/jasmine.preprocessing.StandardScaler.rst", "api/generated/jasmine.preprocessing.StandardScaler.__init__.rst", "api/generated/jasmine.preprocessing.StandardScaler.fit.rst", "api/generated/jasmine.preprocessing.StandardScaler.fit_transform.rst", "api/generated/jasmine.preprocessing.StandardScaler.inverse_transform.rst", "api/generated/jasmine.preprocessing.StandardScaler.is_fitted.rst", "api/generated/jasmine.preprocessing.StandardScaler.transform.rst", "api/generated/jasmine.regression.LinearRegression.rst", "api/generated/jasmine.regression.LinearRegression.__init__.rst", "api/generated/jasmine.regression.LinearRegression.evaluate.rst", "api/generated/jasmine.regression.LinearRegression.inference.rst", "api/generated/jasmine.regression.LinearRegression.train.rst", "api/generated/jasmine.selection.train_test_split.rst", "api/index.rst", "api/metrics.rst", "api/preprocessing.rst", "api/regression.rst", "api/selection.rst", "examples.rst", "index.rst", "installation.rst", "quickstart.rst"], "indexentries": {"__init__() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.__init__", false], [2, "jasmine.classification.LogisticRegression.__init__", false]], "__init__() (jasmine.preprocessing.standardscaler method)": [[18, "jasmine.preprocessing.StandardScaler.__init__", false], [33, "jasmine.preprocessing.StandardScaler.__init__", false]], "__init__() (jasmine.regression.linearregression method)": [[25, "jasmine.regression.LinearRegression.__init__", false], [34, "jasmine.regression.LinearRegression.__init__", false]], "copy (jasmine.preprocessing.standardscaler attribute)": [[18, "jasmine.preprocessing.StandardScaler.copy", false], [33, "jasmine.preprocessing.StandardScaler.copy", false]], "epsilon (jasmine.preprocessing.standardscaler attribute)": [[18, "jasmine.preprocessing.StandardScaler.epsilon", false], [33, "jasmine.preprocessing.StandardScaler.epsilon", false]], "evaluate() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.evaluate", false], [2, "jasmine.classification.LogisticRegression.evaluate", false]], "evaluate() (jasmine.regression.linearregression method)": [[25, "jasmine.regression.LinearRegression.evaluate", false], [34, "jasmine.regression.LinearRegression.evaluate", false]], "fit() (jasmine.preprocessing.standardscaler method)": [[18, "jasmine.preprocessing.StandardScaler.fit", false], [33, "jasmine.preprocessing.StandardScaler.fit", false]], "fit_transform() (jasmine.preprocessing.standardscaler method)": [[18, "jasmine.preprocessing.StandardScaler.fit_transform", false], [33, "jasmine.preprocessing.StandardScaler.fit_transform", false]], "forward() (jasmine.classification.logisticregression static method)": [[0, "jasmine.classification.LogisticRegression.forward", false], [2, "jasmine.classification.LogisticRegression.forward", false]], "forward() (jasmine.regression.linearregression static method)": [[25, "jasmine.regression.LinearRegression.forward", false], [34, "jasmine.regression.LinearRegression.forward", false]], "inference() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.inference", false], [2, "jasmine.classification.LogisticRegression.inference", false]], "inference() (jasmine.regression.linearregression method)": [[25, "jasmine.regression.LinearRegression.inference", false], [34, "jasmine.regression.LinearRegression.inference", false]], "init_params() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.init_params", false], [2, "jasmine.classification.LogisticRegression.init_params", false]], "init_params() (jasmine.regression.linearregression method)": [[25, "jasmine.regression.LinearRegression.init_params", false], [34, "jasmine.regression.LinearRegression.init_params", false]], "inverse_transform() (jasmine.preprocessing.standardscaler method)": [[18, "jasmine.preprocessing.StandardScaler.inverse_transform", false], [33, "jasmine.preprocessing.StandardScaler.inverse_transform", false]], "is_fitted (jasmine.preprocessing.standardscaler property)": [[18, "jasmine.preprocessing.StandardScaler.is_fitted", false], [33, "jasmine.preprocessing.StandardScaler.is_fitted", false]], "linearregression (class in jasmine.regression)": [[25, "jasmine.regression.LinearRegression", false], [34, "jasmine.regression.LinearRegression", false]], "logisticregression (class in jasmine.classification)": [[0, "jasmine.classification.LogisticRegression", false], [2, "jasmine.classification.LogisticRegression", false]], "loss_fn() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.loss_fn", false], [2, "jasmine.classification.LogisticRegression.loss_fn", false]], "loss_fn() (jasmine.regression.linearregression method)": [[25, "jasmine.regression.LinearRegression.loss_fn", false], [34, "jasmine.regression.LinearRegression.loss_fn", false]], "predict_probabilities() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.predict_probabilities", false], [2, "jasmine.classification.LogisticRegression.predict_probabilities", false]], "standardscaler (class in jasmine.preprocessing)": [[18, "jasmine.preprocessing.StandardScaler", false], [33, "jasmine.preprocessing.StandardScaler", false]], "train() (jasmine.classification.logisticregression method)": [[0, "jasmine.classification.LogisticRegression.train", false], [2, "jasmine.classification.LogisticRegression.train", false]], "train() (jasmine.regression.linearregression method)": [[25, "jasmine.regression.LinearRegression.train", false], [34, "jasmine.regression.LinearRegression.train", false]], "transform() (jasmine.preprocessing.standardscaler method)": [[18, "jasmine.preprocessing.StandardScaler.transform", false], [33, "jasmine.preprocessing.StandardScaler.transform", false]], "with_mean (jasmine.preprocessing.standardscaler attribute)": [[18, "jasmine.preprocessing.StandardScaler.with_mean", false], [33, "jasmine.preprocessing.StandardScaler.with_mean", false]], "with_std (jasmine.preprocessing.standardscaler attribute)": [[18, "jasmine.preprocessing.StandardScaler.with_std", false], [33, "jasmine.preprocessing.StandardScaler.with_std", false]]}, "objects": {"jasmine.classification": [[2, 0, 1, "", "LogisticRegression"]], "jasmine.classification.LogisticRegression": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "evaluate"], [2, 1, 1, "", "forward"], [2, 1, 1, "", "inference"], [2, 1, 1, "", "init_params"], [2, 1, 1, "", "loss_fn"], [2, 1, 1, "", "predict_probabilities"], [2, 1, 1, "", "train"]], "jasmine.datasets": [[8, 2, 1, "", "generate_classification"], [9, 2, 1, "", "generate_polynomial"], [10, 2, 1, "", "generate_regression"]], "jasmine.metrics": [[32, 2, 1, "", "accuracy_score"], [32, 2, 1, "", "binary_cross_entropy"], [32, 2, 1, "", "categorical_cross_entropy"], [32, 2, 1, "", "mean_absolute_error"], [32, 2, 1, "", "mean_squared_error"], [32, 2, 1, "", "r2_score"], [32, 2, 1, "", "root_mean_squared_error"]], "jasmine.preprocessing": [[18, 0, 1, "", "StandardScaler"]], "jasmine.preprocessing.StandardScaler": [[18, 1, 1, "", "__init__"], [18, 3, 1, "", "copy"], [18, 3, 1, "", "epsilon"], [18, 1, 1, "", "fit"], [18, 1, 1, "", "fit_transform"], [18, 1, 1, "", "inverse_transform"], [18, 4, 1, "", "is_fitted"], [18, 1, 1, "", "transform"], [18, 3, 1, "", "with_mean"], [18, 3, 1, "", "with_std"]], "jasmine.regression": [[25, 0, 1, "", "LinearRegression"]], "jasmine.regression.LinearRegression": [[25, 1, 1, "", "__init__"], [25, 1, 1, "", "evaluate"], [25, 1, 1, "", "forward"], [25, 1, 1, "", "inference"], [25, 1, 1, "", "init_params"], [25, 1, 1, "", "loss_fn"], [25, 1, 1, "", "train"]], "jasmine.selection": [[35, 2, 1, "", "train_test_split"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "terms": {"": [36, 38, 39], "0": [0, 1, 2, 3, 5, 8, 9, 10, 12, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39], "001": 36, "01": [0, 2, 3, 25, 26, 34, 36, 39], "05": 34, "08": [18, 19, 33], "0f": 36, "1": [0, 1, 2, 7, 8, 9, 12, 25, 29, 30, 32, 33, 34, 35, 37, 39], "10": [0, 1, 10, 34, 35, 36, 37, 39], "100": [1, 8, 9, 10, 33, 36, 38], "1000": [0, 1, 2, 3, 25, 26, 34, 35, 36, 37, 38, 39], "10000": [33, 36], "100x": [37, 39], "15": [1, 36, 39], "1500": 1, "1e": [18, 19, 33], "1f": [36, 39], "1gb": 38, "2": [0, 1, 8, 9, 30, 32, 33, 35, 39], "20": [1, 8, 10, 35, 36, 37], "200": [33, 36], "2000": [0, 34, 36, 39], "20000": 33, "25": [35, 36], "2e": 33, "2f": [1, 36], "3": [1, 32, 33, 34, 35, 37, 39], "30": 35, "300": 33, "3000": 36, "30000": 33, "3f": [36, 37, 38, 39], "4": [32, 37, 38, 39], "42": [1, 35, 36, 39], "4f": [0, 32, 33, 34, 36, 38, 39], "4gb": 38, "5": [0, 1, 2, 5, 8, 32, 38, 39], "50": [36, 38], "500": 1, "5000": 36, "50000": 36, "6": 39, "60": 35, "64": 38, "7": 38, "70": 35, "8": [0, 1, 32, 35, 36, 37, 38], "80": 35, "8gb": 38, "9": [32, 38], "90": 35, "A": [1, 8], "By": [1, 9, 10], "For": [36, 38], "If": [1, 9, 10, 12, 13, 18, 32, 33], "In": 39, "No": 38, "Or": 38, "The": [0, 1, 8, 9, 10, 32, 33, 34, 35], "These": 35, "To": 38, "With": 1, "__init__": [0, 2, 18, 25, 33, 34], "__version__": [38, 39], "ab": 33, "absolut": [14, 32], "acceler": [0, 34, 37, 38], "accept": 32, "accuraci": [0, 11, 32, 36, 39], "accuracy_scor": [0, 2, 4, 36], "activ": 38, "actual": [1, 10, 36], "ad": [1, 10], "adam": 37, "adapt": 37, "add": 39, "adjust": 1, "advanc": [37, 39], "affect": 1, "after": [0, 2, 7, 38], "algorithm": [1, 8], "all": [1, 32, 35, 37, 38, 39], "alwai": [1, 10], "ani": 35, "api": [38, 39], "append": 36, "apt": 38, "ar": [1, 8, 9, 10, 32, 33, 34, 38], "around": [1, 8], "arrai": [1, 8, 18, 20, 21, 22, 24, 30, 32, 33, 35, 36, 38], "array_equ": 35, "assert": 35, "automat": [0, 34, 37, 38, 39], "avail": [0, 36, 38, 39], "avoid": [18, 33], "axi": 33, "back": [18, 22, 33], "backend": 38, "base": [0, 33, 34], "basic": [1, 37], "batch": [36, 38], "batch_infer": 36, "batch_pr": 36, "batch_siz": 36, "batch_x": 36, "bce": 32, "been": [18, 23, 33], "befor": [0, 2, 7, 18, 30, 33, 35], "benchmark_train": 36, "best": 37, "best_param": 36, "best_scor": 36, "better": [0, 34, 38], "between": [11, 12, 13, 14, 15, 16, 17, 32, 35], "bia": [1, 9, 10], "bin": 38, "binari": [1, 12, 32, 38], "binary_cross_entropi": [0, 2, 3], "bincount": 1, "bit": 38, "black": 38, "bool": [1, 8, 9, 10, 12, 13, 18, 23, 30, 32, 33, 35], "both": 32, "bug": 37, "build": 38, "built": 37, "c": 38, "calcul": [32, 36], "callabl": [0, 2, 4, 25, 27, 34], "capabl": 36, "case": 37, "categor": [13, 32], "cd": [37, 38, 39], "center": [18, 33], "check": [18, 23, 33, 39], "class": [1, 2, 5, 8, 13, 18, 25, 32, 37], "class_acc": 36, "class_idx": 36, "class_mask": 36, "class_sep": [1, 8], "classif": [8, 31, 37, 39], "classifi": 36, "clone": [37, 38, 39], "cluster": [1, 8], "cmd": 38, "coef": [1, 9, 10], "coeffici": [1, 9, 10, 16, 32], "column": [1, 10], "com": [37, 38, 39], "combin": [1, 8, 10, 39], "commit": 38, "compat": [35, 37, 38], "compil": [32, 33, 34, 36, 37, 38], "complet": [31, 36, 37, 38], "compon": 39, "comput": [0, 2, 4, 11, 12, 13, 14, 15, 16, 17, 25, 27, 32, 34, 37, 38], "concaten": 36, "concept": 37, "conda": 38, "confid": 0, "config": 38, "constant": 33, "contact": 38, "contain": 31, "container": 38, "contributor": 38, "control": 1, "converg": [0, 34], "copi": [18, 33], "core": 37, "cover": 38, "cpu": 38, "cpu_tim": 36, "creat": [0, 1, 8, 10, 18, 33, 34, 38, 39], "cross": [12, 13, 32], "cuda": [34, 39], "custom": 32, "cv": 36, "cv_fold": 36, "data": [0, 2, 18, 20, 21, 22, 24, 25, 30, 31, 34, 36, 37], "dataset": [0, 30, 31, 34, 35, 36, 37, 38, 39], "def": 36, "default": [1, 9, 10, 32], "default_devic": 36, "degre": [1, 9], "demonstr": 36, "depend": 37, "deploy": 38, "descent": [25, 29, 34], "design": [32, 37], "detail": [36, 37, 39], "detect": [34, 38], "determin": [16, 32], "dev": [37, 38], "develop": 37, "deviat": [1, 9, 10], "devic": [36, 38, 39], "device_put": 36, "dict": [0, 2, 7, 25, 29, 34], "dictionari": 33, "differ": [33, 36], "differenti": 37, "difficulti": 1, "dimension": [0, 36], "directori": 36, "disk": 38, "distribut": [1, 8], "divis": [18, 33], "docker": 37, "docs_sphinx": 38, "document": 38, "durat": 38, "e": [37, 38, 39], "each": [13, 31, 32, 36], "early_stopping_pati": [0, 2, 7, 25, 29, 34], "easier": [1, 8, 38], "effect": 36, "effici": [35, 37], "elast": [34, 37], "elif": 38, "els": [36, 38], "enabl": 38, "encod": [13, 32], "end_idx": 36, "engin": 37, "entropi": [12, 13, 32], "entrypoint": 38, "environ": 37, "epoch": [0, 2, 7], "epsilon": [18, 19, 33], "error": [14, 15, 17, 32, 33, 36, 38], "evalu": [0, 2, 25, 32, 33, 34, 36, 37, 38, 39], "everi": 35, "everyth": [37, 38], "exampl": [31, 37, 38, 39], "expect": [12, 13, 32], "explor": [38, 39], "extra": 38, "f": [0, 1, 32, 33, 34, 35, 36, 37, 38, 39], "factor": [1, 8], "fals": [1, 9, 10, 12, 13, 18, 23, 32, 33, 35], "familiar": 37, "fast": [32, 33, 34, 38], "faster": [38, 39], "featur": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 34, 35, 36], "feature_nois": [1, 8], "few": 39, "figsiz": 36, "figur": 36, "file": 37, "final": [0, 2, 7], "first": [1, 10, 34, 35, 37, 38], "first_tim": 39, "fit": [18, 21, 23, 24, 25, 29, 33, 34, 39], "fit_transform": [18, 33, 36, 39], "fix": 36, "float": [0, 1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 32, 33, 34, 35], "fold": 36, "forg": 38, "forward": [0, 2, 25, 34], "found": 38, "fraction": 36, "free": 38, "from": [0, 1, 32, 33, 34, 35, 36, 37, 39], "from_logit": [12, 13, 32], "function": [0, 2, 3, 4, 8, 10, 25, 26, 27, 34, 37, 38, 39], "gaussian": [1, 9, 10], "gener": [0, 8, 9, 10, 31, 34, 35, 36, 37, 39], "generate_classif": [0, 31, 36, 37, 39], "generate_polynomi": [31, 37], "generate_regress": [31, 34, 35, 36, 37, 38, 39], "get": [38, 39], "git": [37, 38, 39], "github": [37, 38, 39], "glibc": 38, "googleapi": 38, "gpu": [0, 34, 37], "gpu_tim": 36, "grad": 37, "gradient": [25, 29, 34], "grid": 36, "grid_search_cv": 36, "ground": [1, 9, 10, 12, 32], "ground_truth_coeffici": [1, 9, 10], "group": 38, "guarante": 35, "ha": [18, 23, 33], "have": [1, 9], "help": 0, "here": [38, 39], "high": [0, 36, 37, 38], "high_confid": 0, "higher": [37, 38], "hook": 38, "hot": [13, 32], "how": [1, 37], "html": 38, "http": [37, 38, 39], "hypercub": [1, 8], "i": [1, 8, 9, 10, 12, 13, 31, 32, 34, 37, 38, 39], "ident": 35, "implement": [35, 37], "import": [0, 1, 32, 33, 34, 35, 36, 37, 38, 39], "importerror": 38, "improv": [0, 2, 7, 37], "includ": [30, 34, 35, 38, 39], "index": 37, "indic": [1, 10], "inf": 36, "infer": [0, 2, 25, 34, 36, 37, 39], "inform": [1, 8, 10], "init_param": [0, 2, 25, 34], "initi": [0, 2, 25, 34], "input": [0, 1, 2, 4, 5, 6, 7, 10, 18, 20, 21, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35], "instanc": [18, 20, 33], "int": [0, 1, 2, 7, 8, 9, 10, 25, 30, 34, 35, 36], "integ": [1, 8], "integr": [1, 37], "intercept": [1, 9, 10], "interfac": 37, "invers": [18, 22], "inverse_transform": [18, 33], "is_fit": [18, 33], "issu": 37, "jaseempaloth": [37, 38, 39], "jasmin": [0, 1, 31, 32, 33, 34, 35, 36, 39], "jasmine_env": 38, "jax": [0, 1, 2, 10, 25, 32, 33, 34, 35, 36, 37, 38, 39], "jax_cuda_releas": 38, "jax_enable_x64": 38, "jax_rocm_releas": 38, "jaxlib": [37, 38], "jit": [32, 33, 34, 37], "jnp": [0, 1, 2, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39], "jupyt": 38, "just": 39, "keep": 35, "kei": [0, 2, 25, 34], "l1": [34, 37], "l1_penalti": [0, 2, 3, 25, 26, 34], "l2": [0, 34, 36, 37], "l2_penalti": [0, 2, 3, 25, 26, 34, 36, 39], "label": [0, 1, 2, 4, 5, 7, 8, 12, 30, 32, 35, 36], "larg": [37, 38], "large_scale_pipelin": 36, "larger": [1, 8, 34], "lasso": 34, "last": 35, "latest": 38, "learn": [34, 37], "learning_r": [0, 2, 3, 25, 26, 34, 36, 37, 39], "least": 35, "legend": 36, "len": [0, 36], "level": [0, 2, 7], "leverag": 37, "librari": 37, "libtpu_releas": 38, "linear": [1, 8, 10, 25, 29, 31, 37], "linearregress": [31, 32, 33, 36, 37, 38, 39], "linux": 38, "logist": [0, 2, 7, 37], "logisticregress": [31, 36, 37, 39], "logit": [12, 13, 32], "loss": [0, 2, 12, 13, 25, 32, 34], "loss_fn": [0, 2, 25, 34], "loss_funct": [0, 2, 3, 25, 26, 34], "lower": 36, "lr": 36, "m": 38, "m1": 38, "m2": 38, "mac": 38, "machin": 37, "maco": 38, "mae": [14, 32], "mai": 38, "main": 38, "make": [0, 1, 8, 25, 28, 34, 37, 38, 39], "manag": 38, "mani": 1, "manual": 38, "manylinux": 38, "matplotlib": [36, 38], "matrix": [1, 8], "max": 1, "mean": [14, 15, 17, 18, 32, 33, 36], "mean_scor": 36, "mean_squared_error": [25, 26, 34, 36, 39], "memori": [37, 38], "method": [0, 33, 34, 37], "metric": [0, 2, 4, 25, 27, 31, 34, 36, 37, 39], "metrics_fn": [0, 2, 4, 25, 27, 32, 34, 39], "min": [1, 36], "minimum": 38, "minut": 39, "mit": 37, "mode": 38, "model": [1, 2, 4, 7, 10, 25, 27, 28, 29, 31, 33, 36, 37, 38], "model_class": 36, "model_elast": 34, "model_kwarg": 36, "model_lasso": 34, "model_ridg": 34, "modifi": [18, 33], "modul": [0, 1, 32, 33, 34, 35, 37, 38], "modulenotfounderror": 38, "momentum": 37, "monitor": 0, "more": 36, "move": 36, "mse": [15, 32, 36, 39], "much": 38, "multi": 1, "multicollinear": 36, "multipl": [36, 37], "multipli": [1, 8], "n": [1, 8, 38], "n_class": [0, 1, 8, 36, 39], "n_epoch": [0, 2, 3, 25, 26, 34, 36, 37, 38, 39], "n_featur": [0, 1, 2, 8, 10, 18, 20, 21, 22, 24, 25, 33, 34, 35, 36, 37, 38, 39], "n_inform": [1, 8, 10], "n_redund": [1, 8], "n_sampl": [0, 1, 8, 9, 10, 18, 20, 21, 22, 24, 33, 34, 35, 36, 37, 38, 39], "n_train": 36, "name": 38, "nativ": [37, 39], "ndarrai": [0, 2, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35], "need": 38, "net": [34, 37], "neural": 37, "next": 37, "nmean": 36, "nois": [1, 9, 10, 34, 36, 39], "none": [0, 1, 2, 7, 8, 9, 10, 25, 29, 30, 34, 35, 36], "normal": [1, 8, 38], "nresult": 36, "number": [0, 1, 2, 7, 8, 9, 10, 25, 34], "numer": 38, "numpi": [1, 32, 33, 36, 37, 38, 39], "o": 36, "object": [0, 33, 34], "often": 39, "old": 38, "one": [1, 9, 13, 18, 21, 32, 33], "onli": [33, 38], "oper": [35, 37, 38], "optim": [36, 37, 39], "option": [0, 1, 2, 7, 10, 25, 30, 34, 35, 37, 38, 39], "order": 35, "organ": 31, "origin": [18, 22, 33, 35, 38], "otherwis": [18, 23, 33], "our": [37, 38], "out": [1, 8, 38], "output": [1, 10, 13, 32], "overal": 36, "overall_acc": 36, "overfit": 0, "overhead": [34, 37, 39], "overview": 37, "packag": [37, 38], "page": 37, "panda": 38, "param": [0, 2, 18, 20, 24, 25, 33, 34], "param_grid": 36, "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36], "pass": [0, 2, 25, 34], "path": 38, "penalti": [36, 37], "per": 36, "perform": [2, 5, 31, 38, 39], "pip": [37, 38, 39], "pipelin": 37, "pjitfunct": [0, 2, 4], "place": [18, 33], "placement": 38, "pleas": [37, 38], "plot": 36, "plot_learning_curv": 36, "plt": 36, "point": [1, 8], "polynomi": 9, "power": 37, "practic": 37, "pre": 38, "precis": 38, "predict": [0, 2, 5, 6, 11, 12, 13, 14, 15, 16, 17, 25, 28, 32, 34, 36, 37, 39], "predict_prob": [0, 2, 36, 39], "preprocess": [31, 36, 37], "preserv": 35, "prevent": [0, 33], "print": [0, 1, 32, 33, 34, 35, 36, 37, 38, 39], "prngkei": [0, 2, 25, 34], "probabl": [0, 2, 6, 12, 13, 32, 36, 39], "problem": [1, 8, 9, 10, 36], "process": 36, "progress": 36, "project": 37, "properti": [18, 23, 33], "proport": [30, 35], "provid": [0, 1, 31, 32, 33, 34, 35], "pull": 38, "pure": 37, "pyplot": 36, "pytest": 38, "python": [37, 38], "quick": 38, "r": [37, 38, 39], "r2": [32, 39], "r2_score": [25, 27, 34, 37, 39], "ram": 38, "random": [0, 1, 2, 8, 9, 10, 25, 30, 34, 35], "random_st": [1, 8, 9, 10, 30, 35, 36, 39], "rang": [1, 36], "rate": [34, 37], "raw": [13, 32], "read": [38, 39], "real": 37, "realist": 36, "recov": 33, "recoveri": 33, "recovery_error": 33, "redund": [1, 8], "redundant_nois": [1, 8], "refer": [38, 39], "regress": [0, 2, 7, 9, 10, 31, 33, 37, 38], "regular": [37, 39], "relationship": [1, 9], "releas": 38, "remov": [18, 33, 38], "report": 37, "repositori": [36, 38], "reproduc": [1, 10, 30], "request": 37, "requir": 39, "rest": [1, 10], "result": 36, "return": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36], "ridg": 34, "rmse": [17, 32], "root": [17, 32], "run": [34, 36, 37, 38, 39], "runtimeerror": 38, "r\u00b2": [16, 32, 33, 34, 36, 37, 38, 39], "same": 35, "sampl": [1, 8, 9, 10, 32, 33, 35, 36], "scale": [0, 18, 22, 34, 37], "scaler": [18, 20, 21, 23, 33, 36, 39], "score": [0, 2, 4, 11, 16, 32, 33, 34, 36, 37, 38, 39], "script": 38, "seamless": 1, "seamlessli": 32, "search": [36, 37], "second": [36, 38, 39], "second_tim": 39, "section": 31, "see": [36, 37, 39], "seed": [1, 8, 9, 10, 30, 35, 36], "select": [31, 33, 36, 37, 39], "self": [18, 20, 33], "semilogx": 36, "separ": 1, "set": [35, 36, 38], "setup": 39, "sever": 31, "sgd": 37, "shader": 38, "shape": [1, 9, 18, 20, 21, 22, 24, 33, 35, 36, 39], "should": [12, 32], "show": 36, "shuffl": [1, 8, 10, 30], "signific": 37, "simpl": 36, "size": [1, 8, 36, 38], "sklearn": 37, "slim": 38, "slow": 38, "small": [18, 33], "smaller": 38, "solut": 38, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39], "space": 38, "specif": 31, "specifi": [0, 2, 4, 25, 27, 34], "speed": [37, 39], "speedup": [36, 37, 39], "sphinx": 38, "split": [30, 31, 33, 36, 39], "spread": [1, 8], "squar": [15, 17, 32, 36], "stabil": [36, 38], "standard": [1, 9, 10, 18, 22, 33, 38], "standardscal": [31, 34, 36, 37, 39], "start": 38, "start_idx": 36, "start_tim": 36, "static": [0, 2, 25, 34], "statist": 37, "std": [33, 36], "step": [18, 21, 33, 37], "stop": [0, 2, 7], "storag": 38, "store": 33, "strength": 36, "subsequ": [34, 38, 39], "subset": [1, 10, 30, 35], "success": 38, "suitabl": [1, 8], "sum": [0, 36], "support": [32, 35], "synthet": [0, 1, 31, 34, 39], "system": 37, "t": 38, "target": [0, 1, 2, 7, 11, 13, 14, 15, 16, 17, 25, 27, 29, 30, 32, 34, 35], "term": [1, 9, 10], "test": [1, 8, 30, 35, 36, 38], "test_error": 36, "test_ms": 36, "test_pr": 36, "test_scor": 36, "test_siz": [30, 33, 35, 36, 39], "than": 39, "thi": [1, 8, 10, 31, 37, 38, 39], "threshold": [0, 2, 5], "time": [35, 36, 38, 39], "tip": [37, 39], "titl": 36, "tool": [37, 38], "total": [1, 8, 10], "tpu": 37, "track": 36, "train": [0, 2, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39], "train_error": 36, "train_ms": 36, "train_pr": 36, "train_scor": 36, "train_siz": 36, "train_test_split": [31, 33, 36, 37, 39], "training_tim": 36, "transform": [18, 21, 22, 36, 37, 39], "troubleshoot": 37, "true": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 25, 26, 30, 32, 33, 34, 35, 36, 38], "truth": [1, 9, 10, 12, 32], "try": 38, "tupl": [0, 1, 2, 7, 8, 10, 30, 35], "tutori": [37, 38, 39], "txt": [37, 38, 39], "type": [0, 1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35], "under": 37, "underli": [1, 10], "uninstal": 37, "unit": [18, 33], "up": [36, 39], "updat": 37, "upgrad": 38, "us": [0, 1, 2, 4, 10, 18, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39], "usag": 36, "use_bia": [0, 2, 3, 25, 26, 34], "util": [31, 33, 35], "v": 37, "val": 36, "val_scor": 36, "valid": [0, 2, 7, 35], "validation_data": [0, 2, 7, 25, 29, 34], "valu": [0, 1, 2, 8, 11, 12, 13, 14, 15, 16, 17, 18, 25, 27, 28, 29, 32, 33, 34], "variabl": 36, "varianc": [18, 33], "venv": 38, "verbos": [0, 2, 7, 25, 29, 34], "veri": 36, "verif": 37, "verifi": [33, 38, 39], "version": [38, 39], "vertic": [1, 8], "via": 38, "virtual": 37, "visit": 38, "wait": [0, 2, 7], "warm": 36, "we": 37, "well": [1, 34], "wheel": 38, "when": [0, 34, 38, 39], "where": [1, 8, 10], "whether": [1, 8, 10, 30, 35], "window": 38, "with_mean": [18, 33], "with_std": [18, 33], "work": [32, 34, 38], "workdir": 38, "world": 37, "x": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39], "x_devic": 36, "x_recov": 33, "x_scale": 33, "x_temp": [35, 36], "x_test": [30, 32, 33, 35, 36, 39], "x_test1": 35, "x_test2": 35, "x_test_scal": [33, 36, 39], "x_train": [30, 32, 33, 35, 36, 39], "x_train1": 35, "x_train2": 35, "x_train_scal": [33, 36, 39], "x_val": [0, 2, 7, 35, 36], "x_val_scal": 36, "xla": 38, "xlabel": 36, "y": [0, 1, 2, 4, 7, 8, 9, 10, 25, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39], "y_devic": 36, "y_pred": [11, 12, 13, 14, 15, 16, 17, 32], "y_pred_class": 32, "y_pred_prob": 32, "y_temp": [35, 36], "y_test": [30, 32, 33, 35, 36, 39], "y_test1": 35, "y_test2": 35, "y_train": [30, 32, 33, 35, 36, 39], "y_train1": 35, "y_train2": 35, "y_true": [11, 12, 13, 14, 15, 16, 17, 32], "y_val": [0, 2, 7, 35, 36], "ylabel": 36, "you": 39, "your": 37, "zero": [18, 33]}, "titles": ["Classification Models", "Dataset Generators", "jasmine.classification.LogisticRegression", "jasmine.classification.LogisticRegression.__init__", "jasmine.classification.LogisticRegression.evaluate", "jasmine.classification.LogisticRegression.inference", "jasmine.classification.LogisticRegression.predict_probabilities", "jasmine.classification.LogisticRegression.train", "jasmine.datasets.generate_classification", "jasmine.datasets.generate_polynomial", "jasmine.datasets.generate_regression", "jasmine.metrics.accuracy_score", "jasmine.metrics.binary_cross_entropy", "jasmine.metrics.categorical_cross_entropy", "jasmine.metrics.mean_absolute_error", "jasmine.metrics.mean_squared_error", "jasmine.metrics.r2_score", "jasmine.metrics.root_mean_squared_error", "jasmine.preprocessing.StandardScaler", "jasmine.preprocessing.StandardScaler.__init__", "jasmine.preprocessing.StandardScaler.fit", "jasmine.preprocessing.StandardScaler.fit_transform", "jasmine.preprocessing.StandardScaler.inverse_transform", "jasmine.preprocessing.StandardScaler.is_fitted", "jasmine.preprocessing.StandardScaler.transform", "jasmine.regression.LinearRegression", "jasmine.regression.LinearRegression.__init__", "jasmine.regression.LinearRegression.evaluate", "jasmine.regression.LinearRegression.inference", "jasmine.regression.LinearRegression.train", "jasmine.selection.train_test_split", "API Reference", "Performance Metrics", "Data Preprocessing", "Regression Models", "Data Selection", "Examples &amp; Tutorials", "Welcome to JASMINE\u2019s Documentation!", "Installation Guide", "Quick Start Guide"], "titleterms": {"": 37, "1": [36, 38], "2": [36, 38], "3": [36, 38], "4": 36, "5": 36, "6": 36, "No": 35, "__init__": [3, 19, 26], "acceler": 39, "accuracy_scor": [11, 32], "advanc": 36, "amd": 38, "analysi": 36, "api": [31, 37], "appl": 38, "basic": [33, 34, 35, 36, 38], "benchmark": 36, "best": 36, "binari": 0, "binary_cross_entropi": [12, 32], "categorical_cross_entropi": [13, 32], "check": 38, "class": [0, 31, 33, 34, 36], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 32, 36], "common": [31, 38], "comparison": 36, "compil": 39, "complet": 39, "concept": 39, "content": 37, "contribut": 37, "core": [31, 38], "cpu": 36, "cross": 36, "cuda": 38, "curv": 36, "custom": 35, "data": [1, 33, 35, 39], "dataset": [1, 8, 9, 10], "depend": 38, "develop": 38, "direct": 38, "docker": 38, "document": 37, "environ": 38, "evalu": [4, 27], "exampl": [0, 1, 32, 33, 34, 35, 36], "featur": [33, 37, 39], "file": 38, "first": 39, "fit": 20, "fit_transform": 21, "from": 38, "function": [1, 31, 32, 35], "gener": 1, "generate_classif": [1, 8], "generate_polynomi": [1, 9], "generate_regress": [1, 10], "get": 37, "googl": 38, "gpu": [36, 38, 39], "guid": [37, 38, 39], "hyperparamet": 36, "indic": 37, "infer": [5, 28], "instal": [37, 38, 39], "invers": 33, "inverse_transform": 22, "is_fit": 23, "issu": 38, "jasmin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38], "jit": 39, "kei": [37, 39], "larg": 36, "learn": 36, "licens": 37, "linear": [34, 36, 39], "linearregress": [25, 26, 27, 28, 29, 34], "logist": 39, "logisticregress": [0, 2, 3, 4, 5, 6, 7], "manag": 36, "mean_absolute_error": [14, 32], "mean_squared_error": [15, 32], "memori": 36, "metal": 38, "method": 38, "metric": [11, 12, 13, 14, 15, 16, 17, 32], "model": [0, 32, 34, 39], "modul": 31, "most": 31, "multi": 36, "next": [38, 39], "note": [33, 38], "nvidia": 38, "overview": 31, "packag": 31, "perform": [0, 32, 33, 34, 36, 37], "pipelin": [33, 36, 39], "platform": 38, "polynomi": 1, "practic": 36, "predict_prob": 6, "preprocess": [18, 19, 20, 21, 22, 23, 24, 33, 39], "properti": [32, 35], "quick": [31, 37, 39], "r2_score": [16, 32], "ratio": 35, "recommend": 38, "refer": [31, 37], "regress": [1, 25, 26, 27, 28, 29, 32, 34, 36, 39], "regular": [0, 34, 36], "reproduc": 35, "requir": [37, 38], "rocm": 38, "root_mean_squared_error": [17, 32], "scale": [33, 36, 39], "select": [30, 35], "shuffl": 35, "silicon": 38, "sourc": 38, "specif": 38, "split": 35, "standardscal": [18, 19, 20, 21, 22, 23, 24, 33], "start": [37, 39], "step": [38, 39], "support": [37, 38], "system": 38, "tabl": 37, "three": 35, "tip": [0, 1, 34, 36], "tpu": 38, "train": [7, 29], "train_test_split": [30, 35], "transform": [24, 33], "troubleshoot": 38, "tune": 36, "tutori": 36, "uninstal": 38, "updat": 38, "us": 32, "usag": 1, "user": 37, "v": 36, "valid": 36, "verif": 38, "virtual": 38, "wai": 35, "welcom": 37, "your": 39}})